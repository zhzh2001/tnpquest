#ifndef __DATA_H
#define __DATA_H
#include "main.h"

/*
if stuff::explore == false
	stuff::name <- fullname
else
	stuff::name <- name < 10 char (display on screen)
*/
const std::vector<prey> preys = {
	prey("Pigeon", {1, 1, 2}, {7, 8, 10, 31}, true, true, 5, 4),
	prey("Chaffinch", {2, 2, 3}, {4, 7, 8, 10, 19, 24, 27, 31}, true, true, 5, 3),
	prey("Starling", {2, 2, 3, 3, 4}, {4, 7, 8, 10, 12, 14, 19, 20, 21, 22, 24, 27, 31, 32}, true, true, 5, 3),
	prey("Vole", {2, 2, 3, 3}, {1, 2, 4, 5, 7, 11, 12, 13, 21, 22, 25, 27, 30, 31}, false, true, 3, 2),
	prey("Vole", {2, 2, 3}, {1, 2, 4, 5, 7, 11, 12, 13, 21, 22, 25, 27, 30, 31}, false, true, 3, 2),
	prey("Fish", {1, 2}, {15, 16, 17}, true, true, 7, 4),
	prey("Fish", {2, 3}, {15, 16, 17}, true, true, 7, 5),
	prey("Rabbit", {1, 2, 2, 3}, {4, 9, 12, 13, 21, 22, 27, 31, 32}, true, true, 8, 6),
	prey("Rabbit", {1, 2, 3, 3, 3}, {4, 9, 12, 13, 21, 22, 27, 31, 32}, true, true, 8, 6),
	prey("Squirrel", {1, 2, 3, 3}, {4, 7, 8, 10, 21, 22}, true, true, 7, 5),
	prey("Squirrel", {1, 2, 3, 3}, {4, 7, 8, 10, 21, 22}, true, true, 7, 5),
	prey("Mouse", {2, 3}, {4, 5, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32}, true, true, 2, 1),
	prey("Mouse", {1, 2}, {4, 5, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32}, false, true, 3, 2),
	prey("Shrew", {2, 3}, {2, 4, 5, 11, 12, 13, 21, 22, 23, 25, 27, 30, 31}, true, true, 2, 2),
	prey("Shrew", {2, 2, 3}, {2, 4, 5, 11, 12, 13, 21, 22, 23, 25, 27, 30, 31}, false, true, 3, 2),
	prey("Frog", {2, 2, 3}, {12, 16, 17, 18, 28, 30}, true, true, 5, 3)};
const std::vector<injury> injuries = {
	injury("Poison", {0, 1, 1, 2}, {1, 2, 4, 8, 10, 12, 13, 14, 19, 20, 24, 26}, false, false, 4),
	injury("Poison Water", {1, 1, 2}, {15, 16, 17, 18, 24, 28}, false, false, 3),
	injury("Barbed Wire", {1, 1, 2, 2, 3}, {4, 7, 19, 20, 24, 32}, false, false, 2),
	injury("Paint", {0, 1}, {14, 19, 20, 24, 32}, false, false, 4),
	injury("Fall", {1, 2, 2}, {5, 7, 8, 9, 10, 21, 22, 24, 27}, false, false, 4),
	injury("Cave in", {1, 2}, {2, 4, 12, 19, 27, 31}, false, false, 4),
	injury("Deathberries", {1, 2}, {11, 13, 23, 25}, false, false, 5),
	injury("Rock Fall", {0, 1}, {27}, false, false, 4),
	injury("Ticks", {1, 2, 2, 2}, {4, 8, 10, 11, 12, 13, 21, 22, 23, 25, 30, 31}, false, false, 1),
	injury("Rusty Nail", {0, 1, 1, 2}, {14, 19, 20, 24}, false, false, 2),
	injury("Broken Glass", {0, 1, 1, 2}, {14, 19, 20, 24, 26, 29, 32}, false, false, 2),
	injury("Wasps", {1, 1, 2}, {1, 4, 5, 8, 21, 22, 24, 25, 27}, false, false, 4),
	injury("Falling Branch", {0, 1}, {8, 10, 21}, false, false, 4)};
const std::vector<benefit> benefits = {
	benefit("Puddle", {2, 2, 3, 3, 3}, {1, 2, 4, 12}, true, true, 1, 2, 3, catVal_t::thirst),
	benefit("Water", {1, 2, 2, 3, 3}, {5, 27}, true, true, 2, 3, 2, catVal_t::thirst),
	benefit("Dew", {1, 2, 3, 3, 3}, {23, 25, 30}, true, true, 3, 4, 2, catVal_t::thirst),
	benefit("Tpd Mouse", {1, 2, 3, 3, 3}, {1, 2, 4, 5, 8, 10, 11, 12, 13, 21, 22, 23, 25}, true, true, 1, 5, 2, catVal_t::hunger),
	benefit("Bird Nest", {1, 2, 2, 3, 3}, {8, 10, 11, 13, 21}, true, true, 2, 6, 2, catVal_t::hunger),
	benefit("Hot Dog", {1, 1, 1, 1, 2}, {19, 20, 26, 32}, true, true, 1, 2, 3, catVal_t::hunger),
	benefit("Cobweb", {1, 2, 3}, {7, 8, 10, 19, 20, 21, 22, 23, 24, 25, 32}, true, true, 2, 3, 2, catVal_t::health),
	benefit("Marigold", {1, 1, 2, 2, 3}, {4, 31, 32}, true, true, 1, 2, 2, catVal_t::health),
	benefit("Juniper", {1, 2, 2, 2, 3}, {10}, true, true, 4, 5, 3, catVal_t::health),
	benefit("Yarrow", {1, 2, 3}, {1, 2, 4}, true, true, 3, 4, 3, catVal_t::health),
	benefit("Tansy", {1, 3}, {4, 7, 24, 26}, true, true, 4, 5, 2, catVal_t::health),
	benefit("Watermint", {1, 3}, {12, 30}, true, true, 1, 2, 2, catVal_t::health),
	benefit("Horsetail", {2, 3}, {1, 2, 4, 12, 31}, true, true, 2, 3, 2, catVal_t::health),
	benefit("Borage", {2, 3}, {2, 4, 32}, true, true, 3, 4, 2, catVal_t::health),
	benefit("Coltsfoot", {1, 3}, {12, 30, 31}, true, true, 2, 3, 2, catVal_t::health)};
const std::vector<defenseAction> defenseActions = {
	defenseAction("Monster", {3, 3, 4}, {29}, true, true, {9, 16}, catVal_t::skill),
	defenseAction("Tl Trap", {0, 1, 1}, {7, 19, 20, 24, 26, 32}, false, true, {3, 5}, catVal_t::skill),
	defenseAction("Twoleg Trap", {0, 1, 1}, {7, 19, 20, 24, 26, 32}, false, false, {2, 4}, catVal_t::skill),
	defenseAction("Fire", {1, 1, 2}, {4, 8, 10, 11, 13, 14, 19, 21, 24, 31}, false, false, {7, 12}, catVal_t::skill),
	defenseAction("Flood", {1}, {15, 16, 17, 18}, false, false, {6, 10}, catVal_t::skill),
	defenseAction("Thorn Tangle", {1, 1, 2}, {4, 11, 31}, false, false, {1, 2}, catVal_t::skill),
	defenseAction("Thorn Tangle", {1, 2, 2}, {4, 11, 31}, false, false, {2, 3}, catVal_t::skill),
	defenseAction("Thorn Tangle", {1}, {4, 11, 31}, false, false, {3, 4}, catVal_t::skill),
	defenseAction("Lightning", {0, 0, 1, 2}, {1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, false, false, {7, 12}, catVal_t::speed),
	defenseAction("Horse", {1, 1, 2, 2, 3}, {4, 19}, true, true, {3, 5}, catVal_t::speed),
	defenseAction("Horse", {1, 1, 1, 2}, {4, 19}, false, true, {2, 4}, catVal_t::speed),
	defenseAction("Sheep", {1, 1, 2}, {4, 19}, false, true, {3, 5}, catVal_t::speed),
	defenseAction("Sheep", {1, 2, 2}, {4, 19}, false, true, {2, 4}, catVal_t::speed),
	defenseAction("Cow", {1, 2}, {4, 19}, false, true, {3, 5}, catVal_t::speed),
	defenseAction("Cow", {1, 2}, {4, 19}, false, true, {2, 4}, catVal_t::speed),
	defenseAction("Hawk", {1, 1, 2}, {1, 2, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, false, false, {7, 10}, catVal_t::skill),
	defenseAction("Hawk", {0, 1, 1}, {33}, false, false, {5, 10}, catVal_t::skill),
	defenseAction("Owl", {0, 1, 1}, {4, 8, 10, 11, 12, 13, 18, 19, 23, 24, 25, 31}, false, false, {7, 10}, catVal_t::skill),
	defenseAction("Owl", {1, 1, 2}, {4, 8, 10, 11, 12, 13, 18, 19, 23, 24, 25, 31}, false, false, {5, 10}, catVal_t::skill),
	defenseAction("Monster", {1, 1, 2}, {29}, false, false, {9, 16}, catVal_t::skill)};
const std::vector<enemy> enemies = {
	enemy("Twolegs", {0, 1, 1}, {19, 20, 26, 32}, true, true, 7, 3, {6, 8}),
	enemy("Twolegs", {0, 0, 1, 1}, {19, 20, 26, 32}, true, true, 8, 7, {6, 8}),
	enemy("Rat Pack", {1, 1, 2}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, true, true, 6, 6, {6, 10}),
	enemy("Rat", {1, 2, 3, 3}, {14, 18, 21, 24}, false, true, 2, 5, {3, 5}),
	enemy("Dog", {0, 1, 1}, {15, 19, 20, 26, 32}, true, true, 10, 8, {8, 10}),
	enemy("Dog", {0, 1, 1}, {16, 19, 20, 26, 32}, true, true, 6, 6, {6, 8}),
	enemy("Dog", {0, 1, 1}, {15, 19, 20, 26, 32}, true, true, 5, 4, {4, 6}),
	enemy("Badger", {1, 1, 2, 2}, {8, 9, 13, 21, 22, 27}, true, true, 12, 12, {12, 16}),
	enemy("Badger", {1}, {9}, false, true, 12, 10, {7, 10}),
	enemy("Kittypet", {1, 2}, {19, 20, 32}, true, true, 4, 3, {5, 7}),
	enemy("Kittypet", {1, 2}, {19, 20, 32}, false, true, 6, 3, {5, 7}),
	enemy("Rogue", {1, 2, 2}, {1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32}, true, true, 6, 5, {6, 8}),
	enemy("Rogue", {1, 2, 2}, {1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32}, true, true, 7, 6, {6, 8}),
	enemy("Rogue", {0, 2, 2}, {1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32}, false, true, 8, 8, {6, 8}),
	enemy("Loner", {1, 2, 2}, {4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32}, true, true, 6, 3, {6, 8}),
	enemy("Loner", {0, 1, 2, 2}, {4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32}, true, true, 6, 5, {6, 8}),
	enemy("Loner", {0, 1, 2}, {4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32}, false, true, 7, 5, {6, 8}),
	enemy("Fox", {1, 1, 2}, {4, 12, 21, 31}, true, true, 9, 7, {5, 7}),
	enemy("Snake", {1, 2, 2, 2, 3}, {1, 2, 4, 5, 11, 12, 13, 14, 19, 21, 22, 24, 27, 31, 33}, true, true, 2, 2, {3, 4}),
	enemy("Ps Snake", {0, 1, 1, 1, 2}, {5, 21, 27, 33}, false, true, 6, 2, {3, 4}),
	enemy("Stoat", {1, 2, 2}, {4, 9, 12, 13, 21, 22, 24, 27, 31, 33}, true, true, 5, 4, {5, 7}),
	enemy("Racoon", {0}, {8, 9, 10, 12, 14, 21, 22, 24}, true, true, 8, 7, {8, 12}),
	enemy("Cougar", {0, 0, 0, 1, 1}, {1, 2, 4, 12, 31}, true, true, 16, 11, {10, 13})};
const struct star stars[starCount + 1] = {
	{},
	{"Food Supply", {15, 16, 17}},
	{"Water Supply", {4, 8, 10, 11, 13, 21, 22, 23, 31}},
	{"Medicine Supply", {11, 23, 25, 30, 32}},
	{"Dry Dens", {11, 13, 12, 27, 31}}};
// be aware! starID in 1..4
const struct terrain terrains[terrainCount] = {
	{"Corndog", true}, {"Sand", true}, {"Dirt", true}, {"Grass", true}, {"Fields", true}, {"Rocks", true}, {"Cliffs", true}, {"Fence", true}, {"Tree", true}, {"Den", true}, {"Evergreen", true}, {"Thorns", true}, {"Marsh", true}, {"Bushes", true}, {"Garbage", true}, {"River", true}, {"Pond", true}, {"Stream", true}, {"Swp Water", true}, {"Farms", true}, {"Tl Yard", true}, {"Brush Pil", true}, {"Fl Tree", true}, {"Flowers", true}, {"Tl Den", true}, {"Plant", true}, {"Tl Path", true}, {"Rock Pile", true}, {"Puddle", true}, {"Thudrpath", true}, {"Ferns", true}, {"Tal Grass", true}, {"Tl Garden", true}, {"Cliffs", true}};
const struct boardTerrain boardTerrains[boardTotal] = {
	{3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 25, 3, 3, 3, 3, 25, 25, 25, 25, 3, 3, 3, 3, 25, 25, 25, 3, 3, 25, 5, 3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 25, 3, 3, 3, 3, 25, 25, 25, 25, 3, 3, 3, 3, 25, 25, 25, 3, 3, 25, 5, 3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3, 3, 3, 3, 3, 3, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3, 3, 3, 3, 3, 3, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 3, 3, 3, 3, 3, 3, 3, 3}, {3, 13, 13, 3, 31, 31, 31, 31, 3, 13, 13, 3, 31, 31, 31, 31, 3, 3, 3, 3, 7, 3, 3, 3, 7, 7, 7, 3, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3, 3, 7, 4, 4, 4, 3, 3, 3, 3, 7, 4, 4, 4, 3, 3, 3, 4, 7, 4, 4, 4, 3, 11, 3, 3, 7, 4, 4, 4, 3, 3, 3, 3, 7, 4, 4, 4}, {2, 11, 11, 11, 2, 2, 2, 2, 2, 11, 11, 11, 11, 11, 11, 11, 2, 2, 11, 11, 11, 11, 11, 11, 11, 2, 2, 11, 11, 11, 11, 11, 3, 3, 11, 2, 2, 2, 2, 2}, {3, 3, 3, 3, 3, 3, 3, 3, 24, 14, 14, 24, 24, 24, 3, 3, 24, 14, 14, 24, 24, 24, 3, 3, 24, 14, 14, 24, 24, 24, 3, 13, 3, 3, 3, 3, 3, 3, 3, 3}, {3, 5, 3, 3, 3, 3, 3, 3, 3, 3, 25, 25, 3, 25, 25, 3, 25, 25, 25, 25, 3, 25, 25, 5, 25, 25, 3, 3, 23, 3, 3, 28, 3, 25, 3, 23, 23, 23, 3, 3}, {13, 13, 3, 3, 3, 3, 3, 3, 13, 13, 3, 3, 11, 5, 3, 3, 13, 13, 13, 3, 3, 3, 13, 13, 13, 13, 13, 3, 3, 3, 13, 13, 13, 13, 3, 23, 23, 23, 3, 13}, {3, 3, 3, 3, 3, 25, 3, 3, 3, 23, 23, 3, 3, 25, 25, 25, 3, 23, 23, 3, 3, 3, 3, 3, 3, 3, 3, 5, 25, 3, 10, 10, 3, 3, 25, 25, 3, 3, 10, 10}, {3, 3, 28, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 25, 25, 25, 14, 14, 14, 14, 25, 25, 25, 25, 14, 14, 14, 14, 25, 25, 25, 25, 3, 3, 3, 25, 25, 25, 25, 25}, {31, 31, 31, 11, 3, 3, 3, 3, 11, 31, 31, 11, 33, 33, 33, 33, 31, 31, 11, 11, 33, 33, 33, 33, 31, 31, 31, 3, 33, 33, 33, 33, 31, 5, 3, 3, 3, 3, 33, 33}, {3, 3, 3, 3, 3, 3, 3, 3, 23, 3, 3, 3, 3, 28, 3, 25, 7, 7, 7, 7, 7, 7, 25, 25, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 25, 4, 4}, {2, 24, 24, 2, 3, 3, 3, 3, 2, 24, 24, 24, 25, 5, 25, 3, 2, 24, 24, 24, 2, 2, 4, 4, 4, 24, 24, 24, 4, 23, 23, 23, 4, 4, 4, 4, 4, 4, 4, 4}, {4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 8, 21, 21, 21, 8, 8, 8, 8, 8, 21, 21, 21, 8, 8, 8, 8, 4, 4, 4, 4}, {4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 22, 22, 4, 4, 4, 4, 4, 4, 4, 22, 22, 5, 5, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 4, 4, 4}, {33, 33, 33, 4, 4, 4, 4, 33, 33, 33, 33, 33, 4, 4, 33, 33, 33, 33, 33, 33, 9, 4, 4, 33, 33, 33, 33, 33, 23, 23, 4, 4, 33, 33, 4, 4, 23, 4, 5, 4}, {4, 4, 4, 4, 4, 4, 4, 4, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 4, 4, 22, 22, 22, 27, 27, 4, 25, 4, 4, 4, 4, 27, 27, 27, 4, 4, 25, 4, 4}, {31, 31, 31, 31, 2, 2, 25, 25, 31, 31, 31, 31, 25, 2, 16, 16, 31, 31, 31, 16, 16, 16, 16, 16, 31, 31, 2, 16, 16, 16, 16, 16, 9, 2, 2, 25, 2, 2, 16, 16}, {12, 12, 30, 30, 18, 18, 30, 30, 12, 12, 30, 30, 18, 18, 30, 30, 12, 12, 12, 18, 18, 18, 30, 30, 30, 30, 12, 12, 30, 30, 30, 30, 30, 30, 18, 18, 18, 12, 30, 30}, {18, 18, 12, 18, 18, 18, 18, 18, 12, 18, 30, 30, 30, 18, 18, 18, 18, 18, 30, 30, 30, 18, 30, 30, 18, 30, 30, 18, 18, 30, 30, 30, 18, 30, 30, 18, 18, 30, 30, 30}, {25, 18, 18, 18, 18, 12, 18, 18, 18, 18, 18, 18, 12, 18, 18, 25, 22, 30, 22, 22, 22, 18, 18, 18, 30, 30, 18, 18, 18, 18, 18, 18, 12, 12, 12, 18, 18, 18, 25, 18}, {18, 18, 18, 18, 18, 18, 12, 12, 12, 18, 18, 18, 18, 12, 12, 12, 14, 14, 14, 18, 18, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 25, 1, 1, 1, 1, 1, 21, 21, 21, 21, 21, 21, 1, 1, 31, 31, 31, 21, 21, 21, 21, 1, 31, 31, 31}, {22, 22, 1, 1, 1, 1, 1, 1, 16, 1, 1, 1, 25, 25, 25, 1, 16, 16, 25, 1, 1, 1, 1, 1, 16, 16, 16, 1, 1, 25, 1, 25, 16, 1, 1, 1, 1, 1, 1, 1}, {25, 25, 3, 3, 5, 3, 3, 3, 26, 26, 26, 3, 25, 3, 3, 25, 23, 23, 25, 26, 26, 28, 25, 25, 3, 25, 25, 25, 26, 26, 26, 26, 3, 3, 3, 3, 3, 3, 25, 3}, {23, 23, 32, 32, 32, 3, 3, 3, 23, 23, 32, 23, 32, 3, 3, 3, 32, 32, 32, 32, 32, 3, 3, 3, 23, 23, 32, 23, 32, 3, 11, 3, 23, 23, 32, 32, 32, 3, 3, 3}, {4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 4, 26, 26, 26, 4, 4, 4, 4, 4}, {10, 4, 4, 4, 4, 4, 4, 4, 10, 10, 4, 4, 4, 10, 10, 10, 10, 10, 10, 4, 4, 10, 10, 10, 10, 10, 10, 4, 4, 10, 10, 10, 10, 10, 10, 4, 4, 4, 4, 4}, {10, 3, 3, 3, 3, 10, 10, 10, 10, 3, 17, 17, 17, 10, 10, 10, 10, 10, 10, 10, 3, 10, 10, 10, 3, 10, 10, 10, 3, 3, 3, 17, 3, 10, 10, 10, 3, 3, 13, 13}, {3, 3, 3, 3, 3, 3, 25, 3, 17, 17, 25, 5, 3, 22, 22, 17, 5, 3, 17, 17, 17, 17, 25, 22, 5, 5, 3, 25, 3, 3, 25, 25, 5, 5, 3, 3, 3, 3, 25, 3}, {15, 15, 15, 2, 2, 25, 2, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 21, 21, 15, 15, 15, 15, 15, 21, 21, 21, 25, 2, 25, 2, 2, 15, 15, 15}, {2, 2, 4, 4, 4, 4, 4, 4, 16, 16, 16, 16, 16, 2, 4, 25, 16, 16, 16, 16, 16, 16, 4, 4, 22, 22, 22, 22, 22, 22, 9, 22, 16, 16, 16, 16, 4, 4, 22, 22}, {4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8}, {12, 12, 12, 12, 12, 28, 28, 33, 12, 30, 30, 12, 12, 12, 33, 33, 25, 30, 30, 12, 12, 12, 30, 33, 30, 12, 28, 28, 12, 12, 30, 23, 12, 12, 12, 12, 12, 12, 12, 23}, {31, 31, 12, 12, 12, 12, 12, 12, 31, 31, 30, 12, 28, 30, 30, 12, 31, 30, 30, 12, 12, 30, 30, 12, 31, 28, 12, 30, 12, 12, 12, 30, 30, 30, 12, 12, 12, 12, 12, 30}, {8, 8, 4, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 4, 4, 4, 25, 4, 8}, {17, 17, 17, 17, 17, 17, 17, 17, 4, 4, 10, 10, 10, 4, 4, 17, 10, 10, 10, 10, 10, 4, 10, 10, 10, 10, 10, 10, 10, 4, 10, 10, 10, 4, 4, 4, 4, 4, 10, 10}, {27, 27, 9, 2, 2, 2, 2, 33, 27, 27, 27, 10, 10, 2, 33, 33, 10, 10, 10, 10, 10, 2, 2, 10, 10, 10, 10, 2, 2, 2, 11, 10, 10, 10, 10, 2, 11, 2, 2, 10}};
std::vector<stuff> stuffArray[6];

#endif